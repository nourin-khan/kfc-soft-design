#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KFC_Server
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KFC_DB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBILL(BILL instance);
    partial void UpdateBILL(BILL instance);
    partial void DeleteBILL(BILL instance);
    partial void InsertWARNING(WARNING instance);
    partial void UpdateWARNING(WARNING instance);
    partial void DeleteWARNING(WARNING instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertEMPLOYEE_INFO(EMPLOYEE_INFO instance);
    partial void UpdateEMPLOYEE_INFO(EMPLOYEE_INFO instance);
    partial void DeleteEMPLOYEE_INFO(EMPLOYEE_INFO instance);
    partial void InsertFOOD(FOOD instance);
    partial void UpdateFOOD(FOOD instance);
    partial void DeleteFOOD(FOOD instance);
    partial void InsertFOOD_GROUP(FOOD_GROUP instance);
    partial void UpdateFOOD_GROUP(FOOD_GROUP instance);
    partial void DeleteFOOD_GROUP(FOOD_GROUP instance);
    partial void InsertORDER_(ORDER_ instance);
    partial void UpdateORDER_(ORDER_ instance);
    partial void DeleteORDER_(ORDER_ instance);
    partial void InsertORDER_DETAIL(ORDER_DETAIL instance);
    partial void UpdateORDER_DETAIL(ORDER_DETAIL instance);
    partial void DeleteORDER_DETAIL(ORDER_DETAIL instance);
    partial void InsertPARAMETER(PARAMETER instance);
    partial void UpdatePARAMETER(PARAMETER instance);
    partial void DeletePARAMETER(PARAMETER instance);
    partial void InsertPERMISSION(PERMISSION instance);
    partial void UpdatePERMISSION(PERMISSION instance);
    partial void DeletePERMISSION(PERMISSION instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::KFC_Server.Properties.Settings.Default.KFC_DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BILL> BILLs
		{
			get
			{
				return this.GetTable<BILL>();
			}
		}
		
		public System.Data.Linq.Table<WARNING> WARNINGs
		{
			get
			{
				return this.GetTable<WARNING>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE_INFO> EMPLOYEE_INFOs
		{
			get
			{
				return this.GetTable<EMPLOYEE_INFO>();
			}
		}
		
		public System.Data.Linq.Table<FOOD> FOODs
		{
			get
			{
				return this.GetTable<FOOD>();
			}
		}
		
		public System.Data.Linq.Table<FOOD_GROUP> FOOD_GROUPs
		{
			get
			{
				return this.GetTable<FOOD_GROUP>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_> ORDER_s
		{
			get
			{
				return this.GetTable<ORDER_>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this.GetTable<ORDER_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<PARAMETER> PARAMETERs
		{
			get
			{
				return this.GetTable<PARAMETER>();
			}
		}
		
		public System.Data.Linq.Table<PERMISSION> PERMISSIONs
		{
			get
			{
				return this.GetTable<PERMISSION>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BILL")]
	public partial class BILL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BillID;
		
		private System.Nullable<System.DateTime> _BillDate;
		
		private System.Nullable<int> _Total;
		
		private System.Nullable<int> _BillStatus;
		
		private string _DeleteNote;
		
		private string _EmpID;
		
		private string _OrderID;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
		private EntityRef<ORDER_> _ORDER_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillIDChanging(string value);
    partial void OnBillIDChanged();
    partial void OnBillDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBillDateChanged();
    partial void OnTotalChanging(System.Nullable<int> value);
    partial void OnTotalChanged();
    partial void OnBillStatusChanging(System.Nullable<int> value);
    partial void OnBillStatusChanged();
    partial void OnDeleteNoteChanging(string value);
    partial void OnDeleteNoteChanged();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    #endregion
		
		public BILL()
		{
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			this._ORDER_ = default(EntityRef<ORDER_>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BillID
		{
			get
			{
				return this._BillID;
			}
			set
			{
				if ((this._BillID != value))
				{
					this.OnBillIDChanging(value);
					this.SendPropertyChanging();
					this._BillID = value;
					this.SendPropertyChanged("BillID");
					this.OnBillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BillDate
		{
			get
			{
				return this._BillDate;
			}
			set
			{
				if ((this._BillDate != value))
				{
					this.OnBillDateChanging(value);
					this.SendPropertyChanging();
					this._BillDate = value;
					this.SendPropertyChanged("BillDate");
					this.OnBillDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int")]
		public System.Nullable<int> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillStatus", DbType="Int")]
		public System.Nullable<int> BillStatus
		{
			get
			{
				return this._BillStatus;
			}
			set
			{
				if ((this._BillStatus != value))
				{
					this.OnBillStatusChanging(value);
					this.SendPropertyChanging();
					this._BillStatus = value;
					this.SendPropertyChanged("BillStatus");
					this.OnBillStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DeleteNote
		{
			get
			{
				return this._DeleteNote;
			}
			set
			{
				if ((this._DeleteNote != value))
				{
					this.OnDeleteNoteChanging(value);
					this.SendPropertyChanging();
					this._DeleteNote = value;
					this.SendPropertyChanged("DeleteNote");
					this.OnDeleteNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(5)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(5)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._ORDER_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_BILL", Storage="_EMPLOYEE", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.BILLs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.BILLs.Add(this);
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER__BILL", Storage="_ORDER_", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public ORDER_ ORDER_
		{
			get
			{
				return this._ORDER_.Entity;
			}
			set
			{
				ORDER_ previousValue = this._ORDER_.Entity;
				if (((previousValue != value) 
							|| (this._ORDER_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER_.Entity = null;
						previousValue.BILLs.Remove(this);
					}
					this._ORDER_.Entity = value;
					if ((value != null))
					{
						value.BILLs.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("ORDER_");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WARNING")]
	public partial class WARNING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WarningID;
		
		private string _WarningName;
		
		private string _Content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarningIDChanging(string value);
    partial void OnWarningIDChanged();
    partial void OnWarningNameChanging(string value);
    partial void OnWarningNameChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    #endregion
		
		public WARNING()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WarningID
		{
			get
			{
				return this._WarningID;
			}
			set
			{
				if ((this._WarningID != value))
				{
					this.OnWarningIDChanging(value);
					this.SendPropertyChanging();
					this._WarningID = value;
					this.SendPropertyChanged("WarningID");
					this.OnWarningIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningName", DbType="VarChar(100)")]
		public string WarningName
		{
			get
			{
				return this._WarningName;
			}
			set
			{
				if ((this._WarningName != value))
				{
					this.OnWarningNameChanging(value);
					this.SendPropertyChanging();
					this._WarningName = value;
					this.SendPropertyChanged("WarningName");
					this.OnWarningNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmpID;
		
		private string _PositionID;
		
		private string _Username;
		
		private string _Password;
		
		private EntitySet<BILL> _BILLs;
		
		private EntityRef<EMPLOYEE_INFO> _EMPLOYEE_INFO;
		
		private EntityRef<PERMISSION> _PERMISSION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnPositionIDChanging(string value);
    partial void OnPositionIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._BILLs = new EntitySet<BILL>(new Action<BILL>(this.attach_BILLs), new Action<BILL>(this.detach_BILLs));
			this._EMPLOYEE_INFO = default(EntityRef<EMPLOYEE_INFO>);
			this._PERMISSION = default(EntityRef<PERMISSION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._EMPLOYEE_INFO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="VarChar(5)")]
		public string PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					if (this._PERMISSION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(30)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_BILL", Storage="_BILLs", ThisKey="EmpID", OtherKey="EmpID")]
		public EntitySet<BILL> BILLs
		{
			get
			{
				return this._BILLs;
			}
			set
			{
				this._BILLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_INFO_EMPLOYEE", Storage="_EMPLOYEE_INFO", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true)]
		public EMPLOYEE_INFO EMPLOYEE_INFO
		{
			get
			{
				return this._EMPLOYEE_INFO.Entity;
			}
			set
			{
				EMPLOYEE_INFO previousValue = this._EMPLOYEE_INFO.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE_INFO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE_INFO.Entity = null;
						previousValue.EMPLOYEE = null;
					}
					this._EMPLOYEE_INFO.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEE = this;
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("EMPLOYEE_INFO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERMISSION_EMPLOYEE", Storage="_PERMISSION", ThisKey="PositionID", OtherKey="PositionID", IsForeignKey=true)]
		public PERMISSION PERMISSION
		{
			get
			{
				return this._PERMISSION.Entity;
			}
			set
			{
				PERMISSION previousValue = this._PERMISSION.Entity;
				if (((previousValue != value) 
							|| (this._PERMISSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERMISSION.Entity = null;
						previousValue.EMPLOYEEs.Remove(this);
					}
					this._PERMISSION.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEEs.Add(this);
						this._PositionID = value.PositionID;
					}
					else
					{
						this._PositionID = default(string);
					}
					this.SendPropertyChanged("PERMISSION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BILLs(BILL entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_BILLs(BILL entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE_INFO")]
	public partial class EMPLOYEE_INFO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmpID;
		
		private string _EmpName;
		
		private System.Nullable<bool> _Sex;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _PhoneNumber;
		
		private string _Address;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnEmpNameChanging(string value);
    partial void OnEmpNameChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public EMPLOYEE_INFO()
		{
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpName", DbType="NVarChar(100)")]
		public string EmpName
		{
			get
			{
				return this._EmpName;
			}
			set
			{
				if ((this._EmpName != value))
				{
					this.OnEmpNameChanging(value);
					this.SendPropertyChanging();
					this._EmpName = value;
					this.SendPropertyChanged("EmpName");
					this.OnEmpNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(11)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(1000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_INFO_EMPLOYEE", Storage="_EMPLOYEE", ThisKey="EmpID", OtherKey="EmpID", IsUnique=true, IsForeignKey=false)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.EMPLOYEE_INFO = null;
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEE_INFO = this;
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FOOD")]
	public partial class FOOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FoodID;
		
		private string _FoodName;
		
		private System.Nullable<int> _FoodPrice;
		
		private System.Nullable<int> _DiscountPrice;
		
		private string _Image;
		
		private string _Description;
		
		private string _FoodGroupID;
		
		private EntitySet<ORDER_DETAIL> _ORDER_DETAILs;
		
		private EntityRef<FOOD_GROUP> _FOOD_GROUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFoodIDChanging(string value);
    partial void OnFoodIDChanged();
    partial void OnFoodNameChanging(string value);
    partial void OnFoodNameChanged();
    partial void OnFoodPriceChanging(System.Nullable<int> value);
    partial void OnFoodPriceChanged();
    partial void OnDiscountPriceChanging(System.Nullable<int> value);
    partial void OnDiscountPriceChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFoodGroupIDChanging(string value);
    partial void OnFoodGroupIDChanged();
    #endregion
		
		public FOOD()
		{
			this._ORDER_DETAILs = new EntitySet<ORDER_DETAIL>(new Action<ORDER_DETAIL>(this.attach_ORDER_DETAILs), new Action<ORDER_DETAIL>(this.detach_ORDER_DETAILs));
			this._FOOD_GROUP = default(EntityRef<FOOD_GROUP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FoodID
		{
			get
			{
				return this._FoodID;
			}
			set
			{
				if ((this._FoodID != value))
				{
					this.OnFoodIDChanging(value);
					this.SendPropertyChanging();
					this._FoodID = value;
					this.SendPropertyChanged("FoodID");
					this.OnFoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodName", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string FoodName
		{
			get
			{
				return this._FoodName;
			}
			set
			{
				if ((this._FoodName != value))
				{
					this.OnFoodNameChanging(value);
					this.SendPropertyChanging();
					this._FoodName = value;
					this.SendPropertyChanged("FoodName");
					this.OnFoodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodPrice", DbType="Int")]
		public System.Nullable<int> FoodPrice
		{
			get
			{
				return this._FoodPrice;
			}
			set
			{
				if ((this._FoodPrice != value))
				{
					this.OnFoodPriceChanging(value);
					this.SendPropertyChanging();
					this._FoodPrice = value;
					this.SendPropertyChanged("FoodPrice");
					this.OnFoodPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPrice", DbType="Int")]
		public System.Nullable<int> DiscountPrice
		{
			get
			{
				return this._DiscountPrice;
			}
			set
			{
				if ((this._DiscountPrice != value))
				{
					this.OnDiscountPriceChanging(value);
					this.SendPropertyChanging();
					this._DiscountPrice = value;
					this.SendPropertyChanged("DiscountPrice");
					this.OnDiscountPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodGroupID", DbType="VarChar(5)")]
		public string FoodGroupID
		{
			get
			{
				return this._FoodGroupID;
			}
			set
			{
				if ((this._FoodGroupID != value))
				{
					if (this._FOOD_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFoodGroupIDChanging(value);
					this.SendPropertyChanging();
					this._FoodGroupID = value;
					this.SendPropertyChanged("FoodGroupID");
					this.OnFoodGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FOOD_ORDER_DETAIL", Storage="_ORDER_DETAILs", ThisKey="FoodID", OtherKey="FoodID")]
		public EntitySet<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this._ORDER_DETAILs;
			}
			set
			{
				this._ORDER_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FOOD_GROUP_FOOD", Storage="_FOOD_GROUP", ThisKey="FoodGroupID", OtherKey="FoodGroupID", IsForeignKey=true)]
		public FOOD_GROUP FOOD_GROUP
		{
			get
			{
				return this._FOOD_GROUP.Entity;
			}
			set
			{
				FOOD_GROUP previousValue = this._FOOD_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._FOOD_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FOOD_GROUP.Entity = null;
						previousValue.FOODs.Remove(this);
					}
					this._FOOD_GROUP.Entity = value;
					if ((value != null))
					{
						value.FOODs.Add(this);
						this._FoodGroupID = value.FoodGroupID;
					}
					else
					{
						this._FoodGroupID = default(string);
					}
					this.SendPropertyChanged("FOOD_GROUP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.FOOD = this;
		}
		
		private void detach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.FOOD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FOOD_GROUP")]
	public partial class FOOD_GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FoodGroupID;
		
		private string _FoodGroupName;
		
		private EntitySet<FOOD> _FOODs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFoodGroupIDChanging(string value);
    partial void OnFoodGroupIDChanged();
    partial void OnFoodGroupNameChanging(string value);
    partial void OnFoodGroupNameChanged();
    #endregion
		
		public FOOD_GROUP()
		{
			this._FOODs = new EntitySet<FOOD>(new Action<FOOD>(this.attach_FOODs), new Action<FOOD>(this.detach_FOODs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodGroupID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FoodGroupID
		{
			get
			{
				return this._FoodGroupID;
			}
			set
			{
				if ((this._FoodGroupID != value))
				{
					this.OnFoodGroupIDChanging(value);
					this.SendPropertyChanging();
					this._FoodGroupID = value;
					this.SendPropertyChanged("FoodGroupID");
					this.OnFoodGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodGroupName", DbType="NVarChar(100)")]
		public string FoodGroupName
		{
			get
			{
				return this._FoodGroupName;
			}
			set
			{
				if ((this._FoodGroupName != value))
				{
					this.OnFoodGroupNameChanging(value);
					this.SendPropertyChanging();
					this._FoodGroupName = value;
					this.SendPropertyChanged("FoodGroupName");
					this.OnFoodGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FOOD_GROUP_FOOD", Storage="_FOODs", ThisKey="FoodGroupID", OtherKey="FoodGroupID")]
		public EntitySet<FOOD> FOODs
		{
			get
			{
				return this._FOODs;
			}
			set
			{
				this._FOODs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FOODs(FOOD entity)
		{
			this.SendPropertyChanging();
			entity.FOOD_GROUP = this;
		}
		
		private void detach_FOODs(FOOD entity)
		{
			this.SendPropertyChanging();
			entity.FOOD_GROUP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_")]
	public partial class ORDER_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderID;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private System.Nullable<int> _TableNum;
		
		private System.Nullable<int> _OrderStatus;
		
		private string _OrderNote;
		
		private EntitySet<BILL> _BILLs;
		
		private EntitySet<ORDER_DETAIL> _ORDER_DETAILs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnTableNumChanging(System.Nullable<int> value);
    partial void OnTableNumChanged();
    partial void OnOrderStatusChanging(System.Nullable<int> value);
    partial void OnOrderStatusChanged();
    partial void OnOrderNoteChanging(string value);
    partial void OnOrderNoteChanged();
    #endregion
		
		public ORDER_()
		{
			this._BILLs = new EntitySet<BILL>(new Action<BILL>(this.attach_BILLs), new Action<BILL>(this.detach_BILLs));
			this._ORDER_DETAILs = new EntitySet<ORDER_DETAIL>(new Action<ORDER_DETAIL>(this.attach_ORDER_DETAILs), new Action<ORDER_DETAIL>(this.detach_ORDER_DETAILs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableNum", DbType="Int")]
		public System.Nullable<int> TableNum
		{
			get
			{
				return this._TableNum;
			}
			set
			{
				if ((this._TableNum != value))
				{
					this.OnTableNumChanging(value);
					this.SendPropertyChanging();
					this._TableNum = value;
					this.SendPropertyChanged("TableNum");
					this.OnTableNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="Int")]
		public System.Nullable<int> OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OrderNote
		{
			get
			{
				return this._OrderNote;
			}
			set
			{
				if ((this._OrderNote != value))
				{
					this.OnOrderNoteChanging(value);
					this.SendPropertyChanging();
					this._OrderNote = value;
					this.SendPropertyChanged("OrderNote");
					this.OnOrderNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER__BILL", Storage="_BILLs", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<BILL> BILLs
		{
			get
			{
				return this._BILLs;
			}
			set
			{
				this._BILLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER__ORDER_DETAIL", Storage="_ORDER_DETAILs", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this._ORDER_DETAILs;
			}
			set
			{
				this._ORDER_DETAILs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BILLs(BILL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER_ = this;
		}
		
		private void detach_BILLs(BILL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER_ = null;
		}
		
		private void attach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER_ = this;
		}
		
		private void detach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER_ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_DETAIL")]
	public partial class ORDER_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderID;
		
		private string _FoodID;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<System.DateTime> _CompleteTime;
		
		private System.Nullable<int> _Priority;
		
		private string _FoodNote;
		
		private EntityRef<FOOD> _FOOD;
		
		private EntityRef<ORDER_> _ORDER_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnFoodIDChanging(string value);
    partial void OnFoodIDChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnCompleteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompleteTimeChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnFoodNoteChanging(string value);
    partial void OnFoodNoteChanged();
    #endregion
		
		public ORDER_DETAIL()
		{
			this._FOOD = default(EntityRef<FOOD>);
			this._ORDER_ = default(EntityRef<ORDER_>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._ORDER_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FoodID
		{
			get
			{
				return this._FoodID;
			}
			set
			{
				if ((this._FoodID != value))
				{
					if (this._FOOD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFoodIDChanging(value);
					this.SendPropertyChanging();
					this._FoodID = value;
					this.SendPropertyChanged("FoodID");
					this.OnFoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompleteTime
		{
			get
			{
				return this._CompleteTime;
			}
			set
			{
				if ((this._CompleteTime != value))
				{
					this.OnCompleteTimeChanging(value);
					this.SendPropertyChanging();
					this._CompleteTime = value;
					this.SendPropertyChanged("CompleteTime");
					this.OnCompleteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string FoodNote
		{
			get
			{
				return this._FoodNote;
			}
			set
			{
				if ((this._FoodNote != value))
				{
					this.OnFoodNoteChanging(value);
					this.SendPropertyChanging();
					this._FoodNote = value;
					this.SendPropertyChanged("FoodNote");
					this.OnFoodNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FOOD_ORDER_DETAIL", Storage="_FOOD", ThisKey="FoodID", OtherKey="FoodID", IsForeignKey=true)]
		public FOOD FOOD
		{
			get
			{
				return this._FOOD.Entity;
			}
			set
			{
				FOOD previousValue = this._FOOD.Entity;
				if (((previousValue != value) 
							|| (this._FOOD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FOOD.Entity = null;
						previousValue.ORDER_DETAILs.Remove(this);
					}
					this._FOOD.Entity = value;
					if ((value != null))
					{
						value.ORDER_DETAILs.Add(this);
						this._FoodID = value.FoodID;
					}
					else
					{
						this._FoodID = default(string);
					}
					this.SendPropertyChanged("FOOD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER__ORDER_DETAIL", Storage="_ORDER_", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public ORDER_ ORDER_
		{
			get
			{
				return this._ORDER_.Entity;
			}
			set
			{
				ORDER_ previousValue = this._ORDER_.Entity;
				if (((previousValue != value) 
							|| (this._ORDER_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER_.Entity = null;
						previousValue.ORDER_DETAILs.Remove(this);
					}
					this._ORDER_.Entity = value;
					if ((value != null))
					{
						value.ORDER_DETAILs.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(string);
					}
					this.SendPropertyChanged("ORDER_");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PARAMETER")]
	public partial class PARAMETER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ParaID;
		
		private string _Type;
		
		private string _Value;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParaIDChanging(string value);
    partial void OnParaIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public PARAMETER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParaID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ParaID
		{
			get
			{
				return this._ParaID;
			}
			set
			{
				if ((this._ParaID != value))
				{
					this.OnParaIDChanging(value);
					this.SendPropertyChanging();
					this._ParaID = value;
					this.SendPropertyChanged("ParaID");
					this.OnParaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(30)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(100)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(100)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERMISSION")]
	public partial class PERMISSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PositionID;
		
		private string _Position;
		
		private string _Permission1;
		
		private EntitySet<EMPLOYEE> _EMPLOYEEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionIDChanging(string value);
    partial void OnPositionIDChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnPermission1Changing(string value);
    partial void OnPermission1Changed();
    #endregion
		
		public PERMISSION()
		{
			this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(100)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Permission", Storage="_Permission1", DbType="VarChar(100)")]
		public string Permission1
		{
			get
			{
				return this._Permission1;
			}
			set
			{
				if ((this._Permission1 != value))
				{
					this.OnPermission1Changing(value);
					this.SendPropertyChanging();
					this._Permission1 = value;
					this.SendPropertyChanged("Permission1");
					this.OnPermission1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERMISSION_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="PositionID", OtherKey="PositionID")]
		public EntitySet<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this._EMPLOYEEs;
			}
			set
			{
				this._EMPLOYEEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.PERMISSION = this;
		}
		
		private void detach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.PERMISSION = null;
		}
	}
}
#pragma warning restore 1591
